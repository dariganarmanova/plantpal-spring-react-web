{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darig\\\\new-project\\\\frontend\\\\src\\\\components\\\\DashBoard.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashBoard = () => {\n  _s();\n  const [dashboard, setDashboard] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setError(\"User is not logged in. Please log in.\");\n      setLoading(false);\n      return;\n    }\n    const fetchPlantData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/plantRetrieve\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        console.log(response.data);\n        if (Array.isArray(response.data)) {\n          setDashboard(response.data);\n        } else {\n          setError(\"Invalid data format received from the server\");\n        }\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlantData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this); // Display while loading\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this); // Display errors\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardData\",\n    children: dashboard.length > 0 ? dashboard.map((plant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", plant.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", plant.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", plant.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Watered: \", plant.watered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Should be watered?: \", plant.shouldBeWatered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no saved data of yours.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(DashBoard, \"PLuhL/ChvIjj/W7+EG3ipS8s4Ek=\");\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","DashBoard","_s","dashboard","setDashboard","loading","setLoading","error","setError","token","localStorage","getItem","fetchPlantData","response","get","headers","Authorization","console","log","data","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","plant","index","name","location","age","description","watered","shouldBeWatered","_c","$RefreshReg$"],"sources":["C:/Users/darig/new-project/frontend/src/components/DashBoard.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./main.css\";\r\n\r\ninterface DashboardData {\r\n  name: string;\r\n  location: string;\r\n  age: number;\r\n  description: string;\r\n  watered: string;\r\n  shouldBeWatered: boolean;\r\n}\r\n\r\nconst DashBoard: React.FC = () => {\r\n  const [dashboard, setDashboard] = useState<DashboardData[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setError(\"User is not logged in. Please log in.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchPlantData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:8080/plantRetrieve\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        console.log(response.data)\r\n        if (Array.isArray(response.data)) {\r\n            setDashboard(response.data);\r\n        } else {\r\n            setError(\"Invalid data format received from the server\")\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(\"Failed to fetch data. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPlantData();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading...</p>; // Display while loading\r\n\r\n  if (error) return <p>{error}</p>; // Display errors\r\n\r\n  return (\r\n    <div className=\"dashboardData\">\r\n      {dashboard.length > 0 ? (\r\n        dashboard.map((plant, index) => (\r\n          <div key={index} className=\"dashboardContainer\">\r\n            <h1>{plant.name}</h1>\r\n            <p>Location: {plant.location}</p>\r\n            <p>Age: {plant.age}</p>\r\n            <p>Description: {plant.description}</p>\r\n            <p>Last Watered: {plant.watered}</p>\r\n            <p>Should be watered?: {plant.shouldBeWatered}</p>\r\n            <hr />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>There is no saved data of yours.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\darig\\\\new-project\\\\frontend\\\\src\\\\components\\\\DashBoard.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashBoard = () => {\n  _s();\n  const [dashboard, setDashboard] = useState(null);\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(null); // Error state\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setError(\"User is not logged in. Please log in.\");\n      setLoading(false);\n      return;\n    }\n    const fetchPlantData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/plantRetrieve\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setDashboard(response.data); // Adjust if response is an array\n      } catch (error) {\n        console.error(error);\n        setError(\"Failed to fetch data. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlantData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 25\n  }, this); // Display while loading\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 23\n  }, this); // Display errors\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dashboard ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: dashboard.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", dashboard.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", dashboard.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", dashboard.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Last Watered: \", dashboard.watered]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is no saved data of yours.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(DashBoard, \"DKXFm5qz12KeWfUOmNKaACUM4Xg=\");\n_c = DashBoard;\nexport default DashBoard;\nvar _c;\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"names":["axios","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DashBoard","_s","dashboard","setDashboard","loading","setLoading","error","setError","token","localStorage","getItem","fetchPlantData","response","get","headers","Authorization","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","location","age","description","watered","_c","$RefreshReg$"],"sources":["C:/Users/darig/new-project/frontend/src/components/DashBoard.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\ninterface DashboardData {\r\n    name: string;\r\n    location: string; \r\n    age: number;\r\n    description: string;\r\n    watered: string;\r\n}\r\n\r\nconst DashBoard: React.FC = () => {\r\n    const [dashboard, setDashboard] = useState<DashboardData | null>(null);\r\n    const [loading, setLoading] = useState(true); // Loading state\r\n    const [error, setError] = useState<string | null>(null); // Error state\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            setError(\"User is not logged in. Please log in.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const fetchPlantData = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8080/plantRetrieve\", {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                });\r\n                setDashboard(response.data); // Adjust if response is an array\r\n            } catch (error) {\r\n                console.error(error);\r\n                setError(\"Failed to fetch data. Please try again later.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPlantData();\r\n    }, []);\r\n\r\n    if (loading) return <p>Loading...</p>; // Display while loading\r\n\r\n    if (error) return <p>{error}</p>; // Display errors\r\n\r\n    return (\r\n        <div>\r\n            {dashboard ? (\r\n                <>\r\n                    <h1>{dashboard.name}</h1>\r\n                    <p>Location: {dashboard.location}</p>\r\n                    <p>Age: {dashboard.age}</p>\r\n                    <p>Description: {dashboard.description}</p>\r\n                    <p>Last Watered: {dashboard.watered}</p>\r\n                </>\r\n            ) : (\r\n                <p>There is no saved data of yours.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}